type Group @entity(immutable: false) {
  id: Bytes!
  name: String! # string
  members: [Member!]! @derivedFrom(field: "group")
  events: [GroupEvent!]! @derivedFrom(field: "group")
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Member @entity(immutable: false) {
  id: Bytes!
  group: Group!
  createdEvents: [GroupEvent!]! @derivedFrom(field: "creator")
  memberAddress: Bytes! # address
  nickname: String! # string
  bets: [Bet!]! @derivedFrom(field: "creator")
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GroupEvent @entity(immutable: false) {
  id: Bytes!
  creator: Member! # address
  eventDate: BigInt! # uint256
  minDeposit: BigInt! # uint256
  group: Group!
  maxBetDate: BigInt! # uint256
  actualEthPrice: BigInt # Value of ETH in USD when the winner is picked
  winner: Member # address of the winner once it is known
  bets: [Bet!]! @derivedFrom(field: "groupEvent")
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Bet @entity(immutable: false) {
  id: Bytes!
  creator: Member! # address
  betDate: BigInt! # uint256
  amountDeposited: BigInt! # uint256
  predictedEthPrice: BigInt! # uint256
  groupEvent: GroupEvent! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
